// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel[0]=address[6],sel[1]=address[7],sel[2]=address[8],a=load1,b=load2,c=load3,d=load4,e=load5,f=load6,g=load7,h=load8);
    RAM64(in=in,load=load1,address=address[0..5],out=out1);
    RAM64(in=in,load=load2,address=address[0..5],out=out2);
    RAM64(in=in,load=load3,address=address[0..5],out=out3);
    RAM64(in=in,load=load4,address=address[0..5],out=out4);
    RAM64(in=in,load=load5,address=address[0..5],out=out5);
    RAM64(in=in,load=load6,address=address[0..5],out=out6);
    RAM64(in=in,load=load7,address=address[0..5],out=out7);
    RAM64(in=in,load=load8,address=address[0..5],out=out8);
    
    Mux16(a=out1,b=out2,sel=address[6],out=out12);
    Mux16(a=out3,b=out4,sel=address[6],out=out34);
    Mux16(a=out5,b=out6,sel=address[6],out=out56);
    Mux16(a=out7,b=out8,sel=address[6],out=out78);
    Mux16(a=out12,b=out34,sel=address[7],out=out1234);
    Mux16(a=out56,b=out78,sel=address[7],out=out5678);
    Mux16(a=out1234,b=out5678,sel=address[8],out=out);
}